{"version":3,"sources":["components/TodoTextInput.js","config.js","components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","constants/TodoFilters.js","components/TodoItem.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","helpers/request.js","sagas/todo.js","sagas/index.js","store/configureStore.js","index.js"],"names":["TodoTextInput","state","text","_this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","react_default","a","createElement","className","classnames","edit","this","editing","new-todo","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Component","config","apiUrl","Header","_ref","addTodo","addTodoRequest","TodoTextInput_TodoTextInput","length","concat","GET_TODO_REQUEST","GET_TODO_COMPLETE","ADD_TODO_REQUEST","ADD_TODO_COMPLETE","DELETE_TODO_REQUEST","DELETE_TODO_COMPLETE","UPDATE_TODO_REQUEST","UPDATE_TODO_COMPLETE","ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","REQUEST_ERROR","SENDING_REQUEST","getTodoRequest","url","types","getTodoComplete","data","payload","addTodoComplete","deleteTodoRequest","deleteTodoComplete","updateTodoRequest","updateTodoComplete","deleteTodo","id","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","filter","connect","Link","active","children","setFilter","selected","style","cursor","onClick","ownProps","visibilityFilter","dispatch","FILTER_TITLES","_FILTER_TITLES","Object","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","map","key","FilterLink","TodoItem","handleDoubleClick","handleSave","element","_this2","_this$props","todo","checked","completed","onDoubleClick","TodoList","filteredTodos","actions","TodoItem_TodoItem","assign","getTodos","todos","getVisibleTodos","createSelector","t","Error","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","containers_VisibleTodoList","components_Footer","App","containers_Header","containers_MainSection","initialState","arguments","undefined","action","rootReducer","combineReducers","tasks","toConsumableArray","objectSpread","task","taskId","index","findIndex","splice","newTask","finding","find","Date","getTime","toString","areAllMarked","every","defaultHeaders","Accept","Content-Type","doFetch","request","options","Request","forEach","headers","set","fetch","then","response","json","catch","console","log","getTodo","getTodoFlow","addTodoFlow","deleteTodoFlow","updateTodo","updateTodoFlow","regenerator_default","wrap","_context","prev","next","put","sending","call","sent","abrupt","t0","error","message","stop","_marked","INFINITE","_context2","take","_marked2","_context3","method","body","JSON","stringify","_marked3","_url","_context4","_marked4","_context5","_marked5","_url2","_payload","_context6","_marked6","_context7","_marked7","_url3","_payload2","_context8","_marked8","startup","root","sagas_marked","fork","sagas_marked2","persistConfig","storage","whitelist","persistedReducer","persistReducer","sagaMiddleware","store","createSagaMiddleware","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","run","rootSaga","persistor","persistStore","ReactDOM","render","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.09f44924.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n","export default {\n\tapiUrl: 'https://thawing-sea-56566.herokuapp.com',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoTextInput from './TodoTextInput'\nimport config from '../config'\n\nconst Header = ({ addTodo, addTodoRequest }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodoRequest(`${config.apiUrl}/tasks`, {text})\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default Header\n","export const GET_TODO_REQUEST = 'GET_TODO_REQUEST'\nexport const GET_TODO_COMPLETE = 'GET_TODO_COMPLETE'\n\nexport const ADD_TODO_REQUEST = 'ADD_TODO_REQUEST'\nexport const ADD_TODO_COMPLETE = 'ADD_TODO_COMPLETE'\n\nexport const DELETE_TODO_REQUEST = 'DELETE_TODO_REQUEST'\nexport const DELETE_TODO_COMPLETE = 'DELETE_TODO_COMPLETE'\n\nexport const UPDATE_TODO_REQUEST = 'UPDATE_TODO_REQUEST'\nexport const UPDATE_TODO_COMPLETE = 'UPDATE_TODO_COMPLETE'\n\nexport const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\nexport const REQUEST_ERROR = 'REQUEST_ERROR'\nexport const SENDING_REQUEST = 'SENDING_REQUEST'\n","import * as types from '../constants/ActionTypes'\n\nexport const getTodoRequest = (url) => ({ type: types.GET_TODO_REQUEST, url })\nexport const getTodoComplete = data => ({ type: types.GET_TODO_COMPLETE, data })\nexport const addTodoRequest = (url, payload) => ({ type: types.ADD_TODO_REQUEST, url, payload })\nexport const addTodoComplete = (data) => ({ type: types.ADD_TODO_COMPLETE, data })\nexport const deleteTodoRequest = (url) => ({ type: types.DELETE_TODO_REQUEST, url })\nexport const deleteTodoComplete = (data) => ({ type: types.DELETE_TODO_COMPLETE, data })\nexport const updateTodoRequest = (url, payload) => ({ type: types.UPDATE_TODO_REQUEST, url, payload })\nexport const updateTodoComplete = (data) => ({ type: types.UPDATE_TODO_COMPLETE, data })\n\nexport const addTodo = text => ({ type: types.ADD_TODO, text })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter})\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { addTodo, addTodoRequest } from '../actions'\n\nexport default connect(null, { addTodo, addTodoRequest })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\nimport config from '../config';\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    updateTodoRequest: PropTypes.func.isRequired,\n    // deleteTodo: PropTypes.func.isRequired,\n    // completeTodo: PropTypes.func.isRequired,\n    deleteTodoRequest: PropTypes.func.isRequired,\n  }\n\n  state = {\n    editing: false\n  }\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      // this.props.deleteTodo(id)\n      this.props.deleteTodoRequest(`${config.apiUrl}/tasks/${id}`);\n    } else {\n      this.props.updateTodoRequest(`${config.apiUrl}/tasks/${id}`, {text})\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, updateTodoRequest, deleteTodoRequest } = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput text={todo.text}\n                       editing={this.state.editing}\n                       onSave={(text) => this.handleSave(todo.id, text)} />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input className=\"toggle\"\n                 type=\"checkbox\"\n                 checked={todo.completed}\n                 onChange={() => updateTodoRequest(`${config.apiUrl}/tasks/${todo.id}`, {completed: !todo.completed})} />\n          <label onDoubleClick={this.handleDoubleClick}>\n            {todo.text}\n          </label>\n          <button className=\"destroy\"\n                  onClick={() => deleteTodoRequest(`${config.apiUrl}/tasks/${todo.id}`)} />\n        </div>\n      )\n    }\n\n    return (\n      <li className={classnames({\n        completed: todo.completed,\n        editing: this.state.editing\n      })}>\n        {element}\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todo =>\n      <TodoItem key={todo.id} todo={todo} {...actions} />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getTodos = state => state.todos\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector(\n  [getTodos],\n  todos => (\n    todos.reduce((count, todo) =>\n      todo.completed ? count + 1 : count,\n      0\n    )\n  )\n)","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodoList from '../components/TodoList'\nimport { getVisibleTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\nimport config from '../config'\n\nclass MainSection extends Component {\n  componentDidMount() {\n    const { actions } = this.props;\n    const {getTodoRequest} = actions;\n    getTodoRequest(`${config.apiUrl}/tasks`);\n  }\n\n  render() {\n    const { todosCount, completedCount, actions } = this.props;\n\n    return (\n      <section className=\"main\">\n        {\n          !!todosCount && \n          <span>\n            <input\n              className=\"toggle-all\"\n              type=\"checkbox\"\n              checked={completedCount === todosCount}\n              readOnly\n            />\n            <label onClick={actions.completeAllTodos}/>\n          </span>\n        }\n        <VisibleTodoList />\n        {\n          !!todosCount &&\n          <Footer\n            completedCount={completedCount}\n            activeCount={todosCount - completedCount}\n            onClearCompleted={actions.clearCompleted}\n          />\n        }\n      </section>\n    )\n  }\n}\n/* \nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={actions.completeAllTodos}/>\n        </span>\n      }\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      }\n    </section>\n  ) */\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED,\n  GET_TODO_COMPLETE,\n  ADD_TODO_COMPLETE,\n  DELETE_TODO_COMPLETE,\n  UPDATE_TODO_COMPLETE,\n} from '../constants/ActionTypes'\n\nconst initialState = [\n  /* {\n    text: 'Use Redux',\n    completed: false,\n    id: 'x0001'\n  } */\n]\n\nexport default function todos(state = initialState, action) {\n  const tasks = [...state];\n  switch (action.type) {\n    case GET_TODO_COMPLETE:\n      return [...state, ...action.data.tasks];\n    case ADD_TODO_COMPLETE:\n      return [\n        ...state,\n        {...action.data.task},\n      ]\n    case DELETE_TODO_COMPLETE:\n      const taskId = action.data.task.id;\n      const index = tasks.findIndex(task => task.id === taskId);\n      tasks.splice(index, 1);\n\n      return [\n        ...tasks,\n      ]\n    case UPDATE_TODO_COMPLETE:\n      const newTask = action.data.task;\n      const finding = tasks.find(task => task.id === newTask.id);\n      Object.assign(finding, newTask);\n\n      return [\n        ...tasks,\n      ];\n\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          // id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n          id: new Date().getTime().toString(),\n          completed: false,\n          text: action.text\n        }\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo.id !== action.id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import {forEach} from 'lodash';\n\nconst defaultHeaders = {\n\t'Accept': 'application/json, text/plain, */*',\n\t'Content-Type': 'application/json'\n};\n\nexport function doFetch(url, options = {}) {\n\tvar request;\n\n\tif (typeof url === 'string') {\n\t\trequest = new Request(url, options || {});\n\t\tforEach(defaultHeaders, (value, key) => {\n\t\t\tif (!(options.headers && options.headers[key])) {\n\t\t\t\trequest.headers.set(key, defaultHeaders[key]);\n\t\t\t}\n\t\t});\n\t} else {\n\t\trequest = url;\n\t\tforEach(defaultHeaders, (value, key) => {\n\t\t\tif (!(options.headers && options.headers[key])) {\n\t\t\t\trequest.headers.set(key, defaultHeaders[key]);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn fetch(request).then((response) => {\n\t\treturn response.json();\n\t}).catch(console.log);\n}\n","import {take, call, put} from 'redux-saga/effects';\nimport {doFetch as fetch} from '../helpers/request';\nimport * as types from '../constants/ActionTypes'\n// import appConfig from '../config';\n\nfunction* getTodo(url) {\n\tyield put({type: types.SENDING_REQUEST, sending:true});\n\n\ttry {\n\t\tlet response = yield call(fetch, url);\n\t\tyield put({type:types.SENDING_REQUEST, sending: false});\n\t\tyield put({type:types.GET_TODO_COMPLETE, data:response});\n\t\treturn response;\n\t} catch (error) {\n\t\tyield put({type: types.REQUEST_ERROR, error: error.message});\n\t}\n}\n\nexport function* getTodoFlow() {\n\tconst INFINITE = true;\n\n\twhile (INFINITE) {\n\t\tlet request = yield take(types.GET_TODO_REQUEST);\n\t\tlet {url} = request;\n\n\t\tyield call(getTodo, url);\n\t}\n}\n\nfunction* addTodo(url, payload) {\n\tyield put({type: types.SENDING_REQUEST, sending:true});\n\n\ttry {\n\t\tlet response = yield call(fetch, url, {method: 'POST', body: JSON.stringify(payload)});\n\t\tyield put({type:types.SENDING_REQUEST, sending: false});\n\t\tyield put({type:types.ADD_TODO_COMPLETE, data:response});\n\t\treturn response;\n\t} catch (error) {\n\t\tyield put({type: types.REQUEST_ERROR, error: error.message});\n\t}\n}\n\nexport function* addTodoFlow() {\n\tconst INFINITE = true;\n\n\twhile (INFINITE) {\n\t\tlet request = yield take(types.ADD_TODO_REQUEST);\n\t\tlet {url, payload} = request;\n\n\t\tyield call(addTodo, url, payload);\n\t}\n}\n\nfunction* deleteTodo(url, payload) {\n\tyield put({type: types.SENDING_REQUEST, sending:true});\n\n\ttry {\n\t\tlet response = yield call(fetch, url, {method: 'DELETE'});\n\t\tyield put({type:types.SENDING_REQUEST, sending: false});\n\t\tyield put({type:types.DELETE_TODO_COMPLETE, data:response});\n\t\treturn response;\n\t} catch (error) {\n\t\tyield put({type: types.REQUEST_ERROR, error: error.message});\n\t}\n}\n\nexport function* deleteTodoFlow() {\n\tconst INFINITE = true;\n\n\twhile (INFINITE) {\n\t\tlet request = yield take(types.DELETE_TODO_REQUEST);\n\t\tlet {url, payload} = request;\n\n\t\tyield call(deleteTodo, url, payload);\n\t}\n}\n\nfunction* updateTodo(url, payload) {\n\tyield put({type: types.SENDING_REQUEST, sending:true});\n\n\ttry {\n\t\tlet response = yield call(fetch, url, {method: 'PATCH', body: JSON.stringify(payload)});\n\t\tyield put({type:types.SENDING_REQUEST, sending: false});\n\t\tyield put({type:types.UPDATE_TODO_COMPLETE, data:response});\n\t\treturn response;\n\t} catch (error) {\n\t\tyield put({type: types.REQUEST_ERROR, error: error.message});\n\t}\n}\n\nexport function* updateTodoFlow() {\n\tconst INFINITE = true;\n\n\twhile (INFINITE) {\n\t\tlet request = yield take(types.UPDATE_TODO_REQUEST);\n\t\tlet {url, payload} = request;\n\n\t\tyield call(updateTodo, url, payload);\n\t}\n}\n","import {  /*put, call,*/ fork } from 'redux-saga/effects';\nimport {doFetch as fetch} from '../helpers/request';\nimport {\n\tgetTodoFlow,\n\taddTodoFlow,\n\tdeleteTodoFlow,\n\tupdateTodoFlow,\n} from './todo';\n\nexport function fetchApi(url) {\n\treturn fetch( url )\n\t\t.then(response => response.json() )\n\t\t.then(json => json);\n}\n\nexport function* startup() {\n\tyield console.log('Hello Redux-Saga');\n}\n\nexport default function* root() {\n\t// combine your saga here\n\tyield fork(startup);\n\tyield fork(getTodoFlow);\n\tyield fork(addTodoFlow);\n\tyield fork(deleteTodoFlow);\n\tyield fork(updateTodoFlow);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga';\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n\twhitelist: [''],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n/*\n * Configure store with sagas and other middleware\n * Start saga before return to parent\n */\nexport default function configureStore() {\n\tconst sagaMiddleware = createSagaMiddleware();\n\tconst store = createStore(\n\t\t// rootReducer,\n\t\tpersistedReducer,\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n\t\tapplyMiddleware(sagaMiddleware),\n\t);\n\n\t// start sagas here\n\tsagaMiddleware.run(rootSaga);\n\n\tlet persistor = persistStore(store)\n\treturn { store, persistor };\n}\n\n","// import React from 'react'\n// import { render } from 'react-dom'\n// import { createStore } from 'redux'\n// import { Provider } from 'react-redux'\nimport App from './components/App'\n// import reducer from './reducers'\nimport 'todomvc-app-css/index.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store/configureStore';\nimport { getTodoRequest } from './actions'\n\nconst {store} = configureStore();\n\nfunction renderRoot( ) {\n\tgetTodoRequest();\n\n\tReactDOM.render((\n\t\t<Provider store={store} >\n        <App />\n\t\t</Provider>\n\t), document.getElementById('root'));\n}\n\n// first render the app\nrenderRoot();\n\n// watch and re-render with new language select\nstore.subscribe(() => {\n\tconsole.log('store change');\n});\n\n// registerServiceWorker();\n"],"sourceRoot":""}